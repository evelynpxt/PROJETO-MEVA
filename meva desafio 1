SELECT*FROM debito
DROP TABLE debito
APRESENTAÇÃO
INSERT INTO family (description) VALUES ('Cristiano Silva');
INSERT INTO category (description) VALUES ('Dad of the Family');

SELECT * FROM family WHERE id = 1;

INSERT INTO family (nome) VALUES ('Nico');

DELETE FROM family WHERE id = 1;

COUNT(*)
SELECT COUNT (id)
  FROM funcionarios;
JOIN
SELECT *
FROM family
JOIN sub_category ON sub_category.family_description = family.description;

GROUP BY
SELECT
    nome,
    sobrenome,
    COUNT(*) AS count
FROM funcionarios
GROUP BY nome, sobrenome
ORDER BY nome;

ORDER BY
SELECT *
    FROM family
    ORDER BY 4

HAVING

SELECT nome
    FROM funcionarios
    GROUP BY nome
    HAVING COUNT(id) > 1;


CREATE TABLE aluno (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL
);
CREATE TABLE category (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(250) NOT NULL
);
CREATE TABLE sub_category (
    id SERIAL PRIMARY KEY,
    description VARCHAR(250) NOT NULL,
    id_category INTEGER NOT NULL,
    FOREIGN KEY (id_category) REFERENCES category(id) -- Assuming there is a table named 'category' with 'id' as primary key
);

CREATE TABLE user_meva (
    cpf CHAR(11) PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    genre CHAR(1) NOT NULL,
    birth DATE NOT NULL,
    state VARCHAR(100) NOT NULL,
    city VARCHAR(100) NOT NULL,
    id_family INTEGER NOT NULL,
    FOREIGN KEY (id_family) REFERENCES family(id)
);


CREATE TABLE month_expenses (
    id SERIAL PRIMARY KEY,
    description VARCHAR(255) NOT NULL,
    value DECIMAL(15, 2) NOT NULL,
    id_family INTEGER NOT NULL REFERENCES family(id),
    id_category INTEGER NOT NULL REFERENCES category(id),
    cpf VARCHAR(11) NOT NULL REFERENCES user_meva(cpf),
    type VARCHAR(50) NOT NULL, -- FIXO OU VARIAVEL
    date DATE NOT NULL,
    parcel INTEGER,
    bank VARCHAR
);
CREATE TABLE close_month (
    id SERIAL PRIMARY KEY,
    valor_total DOUBLE PRECISION NOT NULL,
    month DATE NOT NULL,
    date_update DATE NOT NULL,
    id_family INTEGER NOT NULL,
    FOREIGN KEY (id_family) REFERENCES family(id) -- Assuming there is a table named 'family' with 'id' as primary key
);
CREATE TABLE life_cost (
    id SERIAL PRIMARY KEY,
    description VARCHAR(250) NOT NULL,
    value DOUBLE PRECISION NOT NULL,
    month DATE NOT NULL,
    id_family INTEGER NOT NULL,
    FOREIGN KEY (id_family) REFERENCES family(id) -- Assuming there is a table named 'family' with 'id' as primary key
);


CREATE TABLE debito (
    id SERIAL PRIMARY KEY,
    description VARCHAR(250) NOT NULL,
    value DOUBLE PRECISION NOT NULL,
    id_family INTEGER NOT NULL,
    id_category INTEGER NOT NULL,
    cpf VARCHAR(11) NOT NULL,
    date DATE NOT NULL,
    parcel INTEGER NOT NULL,
    bank VARCHAR,
    FOREIGN KEY (id_family) REFERENCES family(id), -- Assuming there is a table named 'family' with 'id' as primary key
    FOREIGN KEY (id_category) REFERENCES category(id), -- Assuming there is a table named 'category' with 'id' as primary key
    FOREIGN KEY (cpf) REFERENCES user_meva(cpf) -- Assuming there is a table named 'user_meva' with 'cpf' as primary key
);


